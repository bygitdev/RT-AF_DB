// ************************************************************************ //
// WARNING                                                                    
// -------                                                                    
// The types declared in this file were generated from data read from a       
// Type Library. If this type library is explicitly or indirectly (via        
// another type library referring to this type library) re-imported, or the   
// 'Refresh' command of the Type Library Editor activated while editing the   
// Type Library, the contents of this file will be regenerated and all        
// manual modifications will be lost.                                         
// ************************************************************************ //

// $Rev: 52393 $
// File generated on 2017-11-02 오전 9:26:33 from Type Library described below.

// ************************************************************************  //
// Type Lib: C:\PROGRA~2\LINKGE~1\XGEMV3~1.X\SE\Bin\eXGem.ocx (1)
// LIBID: {B1594C47-316E-46A0-BED1-58A864F882B1}
// LCID: 0
// Helpfile: 
// HelpString: 
// DepndLst: 
//   (1) v2.0 stdole, (C:\Windows\SysWOW64\stdole2.tlb)
// SYS_KIND: SYS_WIN32
// ************************************************************************ //
#ifndef   eXGemLib_OCXH
#define   eXGemLib_OCXH

#pragma option push -b -a4 -w-inl -w-8118

#include <olectrls.hpp>
#include <oleserver.hpp>
#if !defined(__UTILCLS_H)
#include <utilcls.h>
#endif
#if !defined(__UTILCLS_H_VERSION) || (__UTILCLS_H_VERSION < 0x0700)
//
// The code generated by the TLIBIMP utility or the Import|TypeLibrary 
// and Import|ActiveX feature of C++Builder rely on specific versions of
// the header file UTILCLS.H found in the INCLUDE\VCL directory. If an 
// older version of the file is detected, you probably need an update/patch.
//
#error "This file requires a newer version of the header UTILCLS.H" \
       "You need to apply an update/patch to your copy of C++Builder"
#endif
#include <olectl.h>
#include <ocidl.h>
#if !defined(_NO_VCL)
#include <StdVCL.hpp>
#endif  //   _NO_VCL
#include <ocxproxy.h>

#include "eXGemLib_TLB.h"
namespace Exgemlib_tlb
{

// *********************************************************************//
// HelpString: 
// Version:    1.0
// *********************************************************************//


// *********************************************************************//
// COM Component Proxy Class Declaration
// Component Name   : TeXGem
// Help String      : 
// Default Interface: _DeXGem
// Def. Intf. Object: _DeXGemDisp
// Def. Intf. DISP? : Yes
// Event   Interface: _DeXGemEvents
// TypeFlags        : (2) CanCreate
// *********************************************************************//

// *********************************************************************//
// Definition of closures to allow VCL handlers to catch OCX events.      
// *********************************************************************//
typedef void __fastcall (__closure * TeXGemeSECSMessageReceived)(System::TObject * Sender, 
                                                                 long nObjectID, long nStream, 
                                                                 long nFunction, long nSysbyte);
typedef void __fastcall (__closure * TeXGemeGEMCommStateChanged)(System::TObject * Sender, 
                                                                 long nState);
typedef void __fastcall (__closure * TeXGemeGEMControlStateChanged)(System::TObject * Sender, 
                                                                    long nState);
typedef void __fastcall (__closure * TeXGemeGEMReqChangeECV)(System::TObject * Sender, 
                                                             long nMsgId, long nCount, long* pnEcIds, 
                                                             BSTR* psVals);
typedef void __fastcall (__closure * TeXGemeGEMECVChanged)(System::TObject * Sender, 
                                                           long nCount, long* pnEcIds, BSTR* psVals);
typedef void __fastcall (__closure * TeXGemeGEMReqGetDateTime)(System::TObject * Sender, 
                                                               long nMsgId);
typedef void __fastcall (__closure * TeXGemeGEMRspGetDateTime)(System::TObject * Sender, 
                                                               BSTR sSystemTime);
typedef void __fastcall (__closure * TeXGemeGEMReqDateTime)(System::TObject * Sender, 
                                                            long nMsgId, BSTR sSystemTime);
typedef void __fastcall (__closure * TeXGemeGEMErrorEvent)(System::TObject * Sender, 
                                                           long nErrorCode);
typedef void __fastcall (__closure * TeXGemeGEMReqRemoteCommand)(System::TObject * Sender, 
                                                                 long nMsgId, BSTR sRcmd, 
                                                                 long nCount, BSTR* psNames, 
                                                                 BSTR* psVals);
typedef void __fastcall (__closure * TeXGemeGEMReqPPLoadInquire)(System::TObject * Sender, 
                                                                 long nMsgId, BSTR sPpid, 
                                                                 long nLength);
typedef void __fastcall (__closure * TeXGemeGEMRspPPLoadInquire)(System::TObject * Sender, 
                                                                 BSTR sPpid, long nResult);
typedef void __fastcall (__closure * TeXGemeGEMReqPPSend)(System::TObject * Sender, 
                                                          long nMsgId, BSTR sPpid, BSTR sBody);
typedef void __fastcall (__closure * TeXGemeGEMRspPPSend)(System::TObject * Sender, 
                                                          BSTR sPpid, long nResult);
typedef void __fastcall (__closure * TeXGemeGEMReqPP)(System::TObject * Sender, 
                                                      long nMsgId, BSTR sPpid);
typedef void __fastcall (__closure * TeXGemeGEMRspPP)(System::TObject * Sender, 
                                                      BSTR sPpid, BSTR sBody);
typedef void __fastcall (__closure * TeXGemeGEMReqPPDelete)(System::TObject * Sender, 
                                                            long nMsgId, long nCount, BSTR* psPpid);
typedef void __fastcall (__closure * TeXGemeGEMReqPPList)(System::TObject * Sender, 
                                                          long nMsgId);
typedef void __fastcall (__closure * TeXGemeGEMReqPPFmtSend)(System::TObject * Sender, 
                                                             long nMsgId, BSTR sPpid, BSTR sMdln, 
                                                             BSTR sSoftRev, long nCount, 
                                                             BSTR* psCCode, long* pnParamCount, 
                                                             BSTR* psParamNames);
typedef void __fastcall (__closure * TeXGemeGEMRspPPFmtSend)(System::TObject * Sender, 
                                                             BSTR sPpid, long nResult);
typedef void __fastcall (__closure * TeXGemeGEMReqPPFmt)(System::TObject * Sender, 
                                                         long nMsgId, BSTR sPpid);
typedef void __fastcall (__closure * TeXGemeGEMRspPPFmt)(System::TObject * Sender, 
                                                         BSTR sPpid, BSTR sMdln, BSTR sSoftRev, 
                                                         long nCount, BSTR* psCCode, 
                                                         long* pnParamCount, BSTR* psParamNames);
typedef void __fastcall (__closure * TeXGemeGEMRspPPFmtVerification)(System::TObject * Sender, 
                                                                     BSTR sPpid, long nResult);
typedef void __fastcall (__closure * TeXGemeGEMTerminalMessage)(System::TObject * Sender, 
                                                                long nTid, BSTR sMsg);
typedef void __fastcall (__closure * TeXGemeGEMTerminalMultiMessage)(System::TObject * Sender, 
                                                                     long nTid, long nCount, 
                                                                     BSTR* psMsg);
typedef void __fastcall (__closure * TeXGemeGEMSpoolStateChanged)(System::TObject * Sender, 
                                                                  long nState, long nLoadState, 
                                                                  long nUnloadState, BSTR sFullTime, 
                                                                  long nMaxTransmit, long nMsgNum, 
                                                                  long nTotalNum, long nTransmitFail);
typedef void __fastcall (__closure * TeXGemeXGEMStateEvent)(System::TObject * Sender, 
                                                            long nState);
typedef void __fastcall (__closure * TeXGemeGEMRspAllECInfo)(System::TObject * Sender, 
                                                             long lCount, long* plVid, BSTR* psName, 
                                                             BSTR* psValue, BSTR* psDefault, 
                                                             BSTR* psMin, BSTR* psMax, BSTR* psUnit);
typedef void __fastcall (__closure * TeXGemeGEMReqPPSendEx)(System::TObject * Sender, 
                                                            long nMsgId, BSTR sPpid, 
                                                            BSTR sRecipePath);
typedef void __fastcall (__closure * TeXGemeGEMRspPPEx)(System::TObject * Sender, 
                                                        BSTR sPpid, BSTR sRecipePath);
typedef void __fastcall (__closure * TeXGemeGEMReqPPEx)(System::TObject * Sender, 
                                                        long nMsgId, BSTR sPpid, BSTR sRecipePath);
typedef void __fastcall (__closure * TeXGemeGEMRspPPSendEx)(System::TObject * Sender, 
                                                            BSTR sPpid, BSTR sRecipePath, 
                                                            long nResult);
typedef void __fastcall (__closure * TeXGemeGEMReportedEvent)(System::TObject * Sender, 
                                                              long nEventID);
typedef void __fastcall (__closure * TeXGemeGEMRspLoopback)(System::TObject * Sender, 
                                                            long nCount, long* pnAbs);
typedef void __fastcall (__closure * TeXGemeGEMReqOffline)(System::TObject * Sender, 
                                                           long nMsgId, long nFromState, 
                                                           long nToState);
typedef void __fastcall (__closure * TeXGemeGEMReqOnline)(System::TObject * Sender, 
                                                          long nMsgId, long nFromState, 
                                                          long nToState);
typedef void __fastcall (__closure * TeXGemeGEMNotifyPerformanceWarning)(System::TObject * Sender, 
                                                                         long nLevel);
typedef void __fastcall (__closure * TeXGemeGEMSecondaryMsgReceived)(System::TObject * Sender, 
                                                                     long nS, long nF, long nSysbyte, 
                                                                     BSTR sParam1, BSTR sParam2, 
                                                                     BSTR sParam3);
typedef void __fastcall (__closure * TeXGemeGEMReqPPFmtSend2)(System::TObject * Sender, 
                                                              long nMsgId, BSTR sPpid, BSTR sMdln, 
                                                              BSTR sSoftRev, long nCount, 
                                                              BSTR* psCCoode, long* pnParamCount, 
                                                              BSTR* psParamNames, 
                                                              BSTR* psParamValues);
typedef void __fastcall (__closure * TeXGemeGEMRspPPFmt2)(System::TObject * Sender, 
                                                          BSTR sPpid, BSTR sMdln, BSTR sSoftRev, 
                                                          long nCount, BSTR* psCCode, 
                                                          long* pnParamCount, BSTR* psParamNames, 
                                                          BSTR* psParamValues);
typedef void __fastcall (__closure * TeXGemeGEMReportedEvent2)(System::TObject * Sender, 
                                                               long nEventID, long nSysbyte);
//+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-
// Proxy class to host  in CBuilder IDE/Applications.
//-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
class PACKAGE TeXGem : public Vcl::Olectrls::TOleControl
{
  OVERLOADED_PROP_METHODS;
  static TNoParam  OptParam;
  static GUID      DEF_CTL_INTF;

  // Instance of Closures to expose OCX Events as VCL ones
  //
  TeXGemeSECSMessageReceived     FOneSECSMessageReceived;
  TeXGemeGEMCommStateChanged     FOneGEMCommStateChanged;
  TeXGemeGEMControlStateChanged  FOneGEMControlStateChanged;
  TeXGemeGEMReqChangeECV         FOneGEMReqChangeECV;
  TeXGemeGEMECVChanged           FOneGEMECVChanged;
  TeXGemeGEMReqGetDateTime       FOneGEMReqGetDateTime;
  TeXGemeGEMRspGetDateTime       FOneGEMRspGetDateTime;
  TeXGemeGEMReqDateTime          FOneGEMReqDateTime;
  TeXGemeGEMErrorEvent           FOneGEMErrorEvent;
  TeXGemeGEMReqRemoteCommand     FOneGEMReqRemoteCommand;
  TeXGemeGEMReqPPLoadInquire     FOneGEMReqPPLoadInquire;
  TeXGemeGEMRspPPLoadInquire     FOneGEMRspPPLoadInquire;
  TeXGemeGEMReqPPSend            FOneGEMReqPPSend;
  TeXGemeGEMRspPPSend            FOneGEMRspPPSend;
  TeXGemeGEMReqPP                FOneGEMReqPP;
  TeXGemeGEMRspPP                FOneGEMRspPP;
  TeXGemeGEMReqPPDelete          FOneGEMReqPPDelete;
  TeXGemeGEMReqPPList            FOneGEMReqPPList;
  TeXGemeGEMReqPPFmtSend         FOneGEMReqPPFmtSend;
  TeXGemeGEMRspPPFmtSend         FOneGEMRspPPFmtSend;
  TeXGemeGEMReqPPFmt             FOneGEMReqPPFmt;
  TeXGemeGEMRspPPFmt             FOneGEMRspPPFmt;
  TeXGemeGEMRspPPFmtVerification FOneGEMRspPPFmtVerification;
  TeXGemeGEMTerminalMessage      FOneGEMTerminalMessage;
  TeXGemeGEMTerminalMultiMessage FOneGEMTerminalMultiMessage;
  TeXGemeGEMSpoolStateChanged    FOneGEMSpoolStateChanged;
  TeXGemeXGEMStateEvent          FOneXGEMStateEvent;
  TeXGemeGEMRspAllECInfo         FOneGEMRspAllECInfo;
  TeXGemeGEMReqPPSendEx          FOneGEMReqPPSendEx;
  TeXGemeGEMRspPPEx              FOneGEMRspPPEx;
  TeXGemeGEMReqPPEx              FOneGEMReqPPEx;
  TeXGemeGEMRspPPSendEx          FOneGEMRspPPSendEx;
  TeXGemeGEMReportedEvent        FOneGEMReportedEvent;
  TeXGemeGEMRspLoopback          FOneGEMRspLoopback;
  TeXGemeGEMReqOffline           FOneGEMReqOffline;
  TeXGemeGEMReqOnline            FOneGEMReqOnline;
  TeXGemeGEMNotifyPerformanceWarning FOneGEMNotifyPerformanceWarning;
  TeXGemeGEMSecondaryMsgReceived FOneGEMSecondaryMsgReceived;
  TeXGemeGEMReqPPFmtSend2        FOneGEMReqPPFmtSend2;
  TeXGemeGEMRspPPFmt2            FOneGEMRspPPFmt2;
  TeXGemeGEMReportedEvent2       FOneGEMReportedEvent2;

  // Default Interace of OCX
  //
  _DeXGemDisp m_OCXIntf;

  // VCL Property Getters/Setters which delegate to OCX
  //

  // Static variables used by all instances of OCX proxy
  //
  static int          EventDispIDs[41];
  static Vcl::Olectrls::TControlData2 CControlData;
  static GUID          CTL_DEF_INTF;

  // Method providing access to interface as __property 
  //
  _DeXGemDisp __fastcall GetDefaultInterface();
  _DeXGemDisp __fastcall GetControlInterface()
  { return GetDefaultInterface(); }

protected:
  void     __fastcall CreateControl  ();
  void     __fastcall InitControlData();

public:
  virtual  __fastcall TeXGem(System::Classes::TComponent* AOwner) : Vcl::Olectrls::TOleControl(AOwner)
  {};
  virtual  __fastcall TeXGem(HWND        Parent) : Vcl::Olectrls::TOleControl(Parent)
  {};

  // OCX methods
  //
  void            __fastcall AboutBox(void);
  long            __fastcall Initialize(BSTR sCfg);
  long            __fastcall Start(void);
  long            __fastcall Stop(void);
  long            __fastcall Close(void);
  long            __fastcall MakeObject(long* pnObjectID);
  long            __fastcall SetList(long nObjectID, long nItemCount);
  long            __fastcall GetList(long nObjectID, long* pnItemCount);
  long            __fastcall GEMSetVariables(long nObjectID, long nVid);
  long            __fastcall SendSECSMessage(long nObjectID, long nStream, long nFunction, 
                                             long nSysbyte);
  long            __fastcall GEMReqOffline(void);
  long            __fastcall GEMReqLocal(void);
  long            __fastcall GEMReqRemote(void);
  long            __fastcall GEMSetEstablish(long bState);
  long            __fastcall GEMSetParam(BSTR sParamName, BSTR sParamValue);
  long            __fastcall GEMGetParam(BSTR sParamName, BSTR* psParamValue);
  long            __fastcall GEMEQInitialized(long nInitType);
  long            __fastcall GEMReqGetDateTime(void);
  long            __fastcall GEMRspGetDateTime(long nMsgId, BSTR sSystemTime);
  long            __fastcall GEMRspDateTime(long nMsgId, long nResult);
  long            __fastcall GEMSetAlarm(long nID, long nState);
  long            __fastcall GEMRspRemoteCommand(long nMsgId, BSTR sCmd, long nHCAck, long nCount, 
                                                 long* pnResult);
  long            __fastcall GEMRspChangeECV(long nMsgId, long nResult);
  long            __fastcall GEMSetECVChanged(long nCount, long* pnEcIds, BSTR* psEcVals);
  long            __fastcall GEMSetPPChanged(long nMode, BSTR sPpid, long nSize, BSTR sBody);
  long            __fastcall GEMSetPPFmtChanged(long nMode, BSTR sPpid, BSTR sMdln, BSTR sSoftRev, 
                                                long nCount, BSTR* psCCode, long* pnParamCount, 
                                                BSTR* psParamNames);
  long            __fastcall GEMReqPPLoadInquire(BSTR sPpid, long nLength);
  long            __fastcall GEMRspPPLoadInquire(long nMsgId, BSTR sPpid, long nResult);
  long            __fastcall GEMReqPPSend(BSTR sPpid, BSTR sBody);
  long            __fastcall GEMRspPPSend(long nMsgId, BSTR sPpid, long nResult);
  long            __fastcall GEMReqPP(BSTR sPpid);
  long            __fastcall GEMRspPP(long nMsgId, BSTR sPpid, BSTR sBody);
  long            __fastcall GEMRspPPDelete(long nMsgId, long nCount, BSTR* psPpids, long nResult);
  long            __fastcall GEMRspPPList(long nMsgId, long nCount, BSTR* psPpids);
  long            __fastcall GEMReqPPFmtSend(BSTR sPpid, BSTR sMdln, BSTR sSoftRev, long nCount, 
                                             BSTR* psCCode, long* pnParamCount, BSTR* psParamNames);
  long            __fastcall GEMRspPPFmtSend(long nMsgId, BSTR sPpid, long nResult);
  long            __fastcall GEMReqPPFmt(BSTR sPpid);
  long            __fastcall GEMRspPPFmt(long nMsgId, BSTR sPpid, BSTR sMdln, BSTR sSoftRev, 
                                         long nCount, BSTR* psCCode, long* pnParamCount, 
                                         BSTR* psParamNames);
  long            __fastcall GEMReqPPFmtVerification(BSTR sPpid, long nCount, long* pnAck, 
                                                     BSTR* psSeqNumber, BSTR* psError);
  long            __fastcall GEMSetTerminalMessage(long nTid, BSTR sMsg);
  long            __fastcall GEMSetVariable(long nCount, long* pnVid, BSTR* psValue);
  long            __fastcall GEMEnableLog(long bEnabled);
  long            __fastcall GEMSetLogOption(BSTR sDriectory, BSTR sPrefix, BSTR sExtension, 
                                             long nKeepDay, long bMakeDailyLog, 
                                             long bMakeSubDirectory);
  long            __fastcall GEMSetEvent(long nEventID);
  long            __fastcall GEMGetVariable(long nCount, long* pnVid, BSTR* psValue);
  long            __fastcall GEMSetSpecificMessage(long nObjectID, BSTR sMsgName);
  long            __fastcall GEMGetSpecificMessage(long nObjectID, long* pnRObjectID, BSTR sMsgName);
  long            __fastcall GetAllStringItem(long nObjectID, BSTR* psValue);
  long            __fastcall SetAllStringItem(long nObjectID, BSTR sValue);
  long            __fastcall GEMSetVarName(long nCount, BSTR* psVidName, BSTR* psValue);
  long            __fastcall GEMGetVarName(long nCount, BSTR* psVidName, BSTR* psValue);
  long            __fastcall CloseObject(long nObjectID);
  long            __fastcall GEMReqAllECInfo(void);
  long            __fastcall SetBinary(long nObjectID, short* pnValue, long nItemCount);
  long            __fastcall SetBool(long nObjectID, short* pnValue, long nItemCount);
  long            __fastcall SetU1(long nObjectID, short* pnValue, long nItemCount);
  long            __fastcall SetU2(long nObjectID, long* pnValue, long nItemCount);
  long            __fastcall SetU4(long nObjectID, double* prValue, long nItemCount);
  long            __fastcall SetU8(long nObjectID, double* prValue, long nItemCount);
  long            __fastcall SetI1(long nObjectID, short* pnValue, long nItemCount);
  long            __fastcall SetI2(long nObjectID, short* pnValue, long nItemCount);
  long            __fastcall SetI4(long nObjectID, long* plValue, long nItemCount);
  long            __fastcall SetI8(long nObjectID, long* plValue, long nItemCount);
  long            __fastcall SetF4(long nObjectID, float* prValue, long nItemCount);
  long            __fastcall SetF8(long nObjectID, double* prValue, long nItemCount);
  long            __fastcall SetAscii(long nObjectID, BSTR pszValue, long nItemCount);
  long            __fastcall GetBinary(long nObjectID, short* pnValue, long* pnItemCount, long nSize);
  long            __fastcall GetBool(long nObjectID, short* pnValue, long* pnItemCount, long nSize);
  long            __fastcall GetU1(long nObjectID, short* pnValue, long* pnItemCount, long nSize);
  long            __fastcall GetU2(long nObjectID, long* pnValue, long* pnItemCount, long nSize);
  long            __fastcall GetU4(long nObjectID, double* prValue, long* pnItemCount, long nSize);
  long            __fastcall GetU8(long nObjectID, double* prValue, long* pnItemCount, long nSize);
  long            __fastcall GetI1(long nObjectID, short* pnValue, long* pnItemCount, long nSize);
  long            __fastcall GetI2(long nObjectID, short* pnValue, long* pnItemCount, long nSize);
  long            __fastcall GetI4(long nObjectID, long* pnValue, long* pnItemCount, long nSize);
  long            __fastcall GetI8(long nObjectID, long* pnValue, long* pnItemCount, long nSize);
  long            __fastcall GetF4(long nObjectID, float* prValue, long* pnItemCount, long nSize);
  long            __fastcall GetF8(long nObjectID, double* prValue, long* pnItemCount, long nSize);
  long            __fastcall GetAscii(long nObjectID, BSTR* psValue, long* pnItemCount);
  long            __fastcall GEMReqPPSendEx(BSTR sPpid, BSTR sRecipePath);
  long            __fastcall GEMRspPPEx(long nMsgId, BSTR sPpid, BSTR sRecipePath);
  long            __fastcall GEMRspPPSendEx(long nMsgId, BSTR sPpid, BSTR sRecipePath, long nResult);
  long            __fastcall GEMReqPPEx(BSTR sPpid, BSTR sRecipePath);
  long            __fastcall SetAsciiEx(long nObjectID, short* pnValue, long nItemCount);
  long            __fastcall GetAsciiEx(long nObjectID, short* pnValue, long* pnItemCount, 
                                        long nSize);
  long            __fastcall GEMSetVariableEx(long nObjectID, long nVid);
  long            __fastcall GEMReqLoopback(long nCount, long* pnAbs);
  long            __fastcall GEMSetEventEnable(long nCount, long* pnCEIDs, long nEnable);
  long            __fastcall GEMSetAlarmEnable(long nCount, long* pnALIDs, long nEnable);
  long            __fastcall GEMGetEventEnable(long nCount, long* pnCEIDs, long* pnEnable);
  long            __fastcall GEMGetAlarmEnable(long nCount, long* pnALIDs, long* pnEnable);
  long            __fastcall GEMGetAlarmInfo(long nCount, long* pnALIDs, long* pnALCDs, 
                                             BSTR* psALTXs);
  long            __fastcall GEMGetSVInfo(long nCount, long* pnSVIDs, BSTR* psMins, BSTR* psMaxs);
  long            __fastcall GEMGetECVInfo(long nCount, long* pnEcIds, BSTR* psNames, BSTR* psDefs, 
                                           BSTR* psMins, BSTR* psMaxs, BSTR* psUnits);
  long            __fastcall GEMRspOffline(long nMsgId, long nAck);
  long            __fastcall GEMRspOnline(long nMsgId, long nAck);
  long            __fastcall GEMReqHostOffline(void);
  long            __fastcall GEMReqStartPolling(BSTR sName, long nScanTime);
  long            __fastcall GEMReqStopPolling(BSTR sName);
  long            __fastcall GEMRspRemoteCommand2(long nMsgId, BSTR sCmd, long nHCAck, long nCount, 
                                                  BSTR* psCpName, long* pnCpAck);
  long            __fastcall GEMReqPPFmtSend2(BSTR sPpid, BSTR sMdln, BSTR sSoftRev, long nCount, 
                                              BSTR* psCCode, long* pnParamCount, BSTR* psParamNames, 
                                              BSTR* psParamValues);
  long            __fastcall GEMRspPPFmt2(long nMsgId, BSTR sPpid, BSTR sMdln, BSTR sSoftRev, 
                                          long nCount, BSTR* psCCode, long* pnParamCount, 
                                          BSTR* psParamNames, BSTR* psParamValues);

  // OCX properties
  //
  __property _DeXGemDisp ControlInterface={ read=GetDefaultInterface };

  // Published properties
  //
__published:

  // Standard/Extended properties
  //

  // OCX properties
  //
  __property System::WideString IP={ read=GetWideStringProp, write=SetWideStringProp, stored=false, index=1 };
  __property int Port={ read=GetIntegerProp, write=SetIntegerProp, stored=false, index=2 };
  __property bool Active={ read=GetWordBoolProp, write=SetWordBoolProp, stored=false, index=3 };

  // OCX Events
  //
  __property TeXGemeSECSMessageReceived OneSECSMessageReceived={ read=FOneSECSMessageReceived, write=FOneSECSMessageReceived };
  __property TeXGemeGEMCommStateChanged OneGEMCommStateChanged={ read=FOneGEMCommStateChanged, write=FOneGEMCommStateChanged };
  __property TeXGemeGEMControlStateChanged OneGEMControlStateChanged={ read=FOneGEMControlStateChanged, write=FOneGEMControlStateChanged };
  __property TeXGemeGEMReqChangeECV OneGEMReqChangeECV={ read=FOneGEMReqChangeECV, write=FOneGEMReqChangeECV };
  __property TeXGemeGEMECVChanged OneGEMECVChanged={ read=FOneGEMECVChanged, write=FOneGEMECVChanged };
  __property TeXGemeGEMReqGetDateTime OneGEMReqGetDateTime={ read=FOneGEMReqGetDateTime, write=FOneGEMReqGetDateTime };
  __property TeXGemeGEMRspGetDateTime OneGEMRspGetDateTime={ read=FOneGEMRspGetDateTime, write=FOneGEMRspGetDateTime };
  __property TeXGemeGEMReqDateTime OneGEMReqDateTime={ read=FOneGEMReqDateTime, write=FOneGEMReqDateTime };
  __property TeXGemeGEMErrorEvent OneGEMErrorEvent={ read=FOneGEMErrorEvent, write=FOneGEMErrorEvent };
  __property TeXGemeGEMReqRemoteCommand OneGEMReqRemoteCommand={ read=FOneGEMReqRemoteCommand, write=FOneGEMReqRemoteCommand };
  __property TeXGemeGEMReqPPLoadInquire OneGEMReqPPLoadInquire={ read=FOneGEMReqPPLoadInquire, write=FOneGEMReqPPLoadInquire };
  __property TeXGemeGEMRspPPLoadInquire OneGEMRspPPLoadInquire={ read=FOneGEMRspPPLoadInquire, write=FOneGEMRspPPLoadInquire };
  __property TeXGemeGEMReqPPSend OneGEMReqPPSend={ read=FOneGEMReqPPSend, write=FOneGEMReqPPSend };
  __property TeXGemeGEMRspPPSend OneGEMRspPPSend={ read=FOneGEMRspPPSend, write=FOneGEMRspPPSend };
  __property TeXGemeGEMReqPP OneGEMReqPP={ read=FOneGEMReqPP, write=FOneGEMReqPP };
  __property TeXGemeGEMRspPP OneGEMRspPP={ read=FOneGEMRspPP, write=FOneGEMRspPP };
  __property TeXGemeGEMReqPPDelete OneGEMReqPPDelete={ read=FOneGEMReqPPDelete, write=FOneGEMReqPPDelete };
  __property TeXGemeGEMReqPPList OneGEMReqPPList={ read=FOneGEMReqPPList, write=FOneGEMReqPPList };
  __property TeXGemeGEMReqPPFmtSend OneGEMReqPPFmtSend={ read=FOneGEMReqPPFmtSend, write=FOneGEMReqPPFmtSend };
  __property TeXGemeGEMRspPPFmtSend OneGEMRspPPFmtSend={ read=FOneGEMRspPPFmtSend, write=FOneGEMRspPPFmtSend };
  __property TeXGemeGEMReqPPFmt OneGEMReqPPFmt={ read=FOneGEMReqPPFmt, write=FOneGEMReqPPFmt };
  __property TeXGemeGEMRspPPFmt OneGEMRspPPFmt={ read=FOneGEMRspPPFmt, write=FOneGEMRspPPFmt };
  __property TeXGemeGEMRspPPFmtVerification OneGEMRspPPFmtVerification={ read=FOneGEMRspPPFmtVerification, write=FOneGEMRspPPFmtVerification };
  __property TeXGemeGEMTerminalMessage OneGEMTerminalMessage={ read=FOneGEMTerminalMessage, write=FOneGEMTerminalMessage };
  __property TeXGemeGEMTerminalMultiMessage OneGEMTerminalMultiMessage={ read=FOneGEMTerminalMultiMessage, write=FOneGEMTerminalMultiMessage };
  __property TeXGemeGEMSpoolStateChanged OneGEMSpoolStateChanged={ read=FOneGEMSpoolStateChanged, write=FOneGEMSpoolStateChanged };
  __property TeXGemeXGEMStateEvent OneXGEMStateEvent={ read=FOneXGEMStateEvent, write=FOneXGEMStateEvent };
  __property TeXGemeGEMRspAllECInfo OneGEMRspAllECInfo={ read=FOneGEMRspAllECInfo, write=FOneGEMRspAllECInfo };
  __property TeXGemeGEMReqPPSendEx OneGEMReqPPSendEx={ read=FOneGEMReqPPSendEx, write=FOneGEMReqPPSendEx };
  __property TeXGemeGEMRspPPEx OneGEMRspPPEx={ read=FOneGEMRspPPEx, write=FOneGEMRspPPEx };
  __property TeXGemeGEMReqPPEx OneGEMReqPPEx={ read=FOneGEMReqPPEx, write=FOneGEMReqPPEx };
  __property TeXGemeGEMRspPPSendEx OneGEMRspPPSendEx={ read=FOneGEMRspPPSendEx, write=FOneGEMRspPPSendEx };
  __property TeXGemeGEMReportedEvent OneGEMReportedEvent={ read=FOneGEMReportedEvent, write=FOneGEMReportedEvent };
  __property TeXGemeGEMRspLoopback OneGEMRspLoopback={ read=FOneGEMRspLoopback, write=FOneGEMRspLoopback };
  __property TeXGemeGEMReqOffline OneGEMReqOffline={ read=FOneGEMReqOffline, write=FOneGEMReqOffline };
  __property TeXGemeGEMReqOnline OneGEMReqOnline={ read=FOneGEMReqOnline, write=FOneGEMReqOnline };
  __property TeXGemeGEMNotifyPerformanceWarning OneGEMNotifyPerformanceWarning={ read=FOneGEMNotifyPerformanceWarning, write=FOneGEMNotifyPerformanceWarning };
  __property TeXGemeGEMSecondaryMsgReceived OneGEMSecondaryMsgReceived={ read=FOneGEMSecondaryMsgReceived, write=FOneGEMSecondaryMsgReceived };
  __property TeXGemeGEMReqPPFmtSend2 OneGEMReqPPFmtSend2={ read=FOneGEMReqPPFmtSend2, write=FOneGEMReqPPFmtSend2 };
  __property TeXGemeGEMRspPPFmt2 OneGEMRspPPFmt2={ read=FOneGEMRspPPFmt2, write=FOneGEMRspPPFmt2 };
  __property TeXGemeGEMReportedEvent2 OneGEMReportedEvent2={ read=FOneGEMReportedEvent2, write=FOneGEMReportedEvent2 };
};
typedef TeXGem  TeXGemProxy;

};     // namespace Exgemlib_tlb

#if !defined(NO_IMPLICIT_NAMESPACE_USE)
using  namespace Exgemlib_tlb;
#endif

#pragma option pop

#endif // eXGemLib_OCXH
